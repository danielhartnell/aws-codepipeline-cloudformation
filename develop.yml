---
AWSTemplateFormatVersion: "2010-09-09"
Description: Create a Docker CI/CD pipeline with CodePipeline, CodeBuild and ECR
Parameters:
  ProjectName:
    Default: GenericProjectName
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  GitHubOwner:
    Default: mozilla-iam
    Description: The owner or organization for the GitHub project
    Type: String
  GitHubRepo:
    Default: sso-dashboard
    Description: The GitHub repository name
    Type: String
  GitHubRepoBranch:
    Default: master
    Description: The branch for the GitHub repository
    Type: String
  GitHubOAuthToken:
    Description: The OAuth token to access GitHub
    Type: String
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - ProjectName
      - Label:
          default: "GitHub Settings"
        Parameters:
          - GitHubOwner
          - GitHubRepo
          - GitHubRepoBranch
          - GitHubOAuthToken
      - Label:
          default: "Notifcation Settings"
        Parameters:
          - Email

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: EventRule
      EventPattern:
        source:
        - aws.codepipeline
        detail-type:
        - CodeBuild Build State Change
        detail:
          state:
          - FAILED
          project-name:
          - !Ref CodeBuildProject
      State: "ENABLED"
      Targets:
        -
          Arn:
            Ref: CodePipelineSNSTopic
          Id:
            Ref: ProjectName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      Name: !Ref 'ProjectName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: GitHubSource
          Actions:
            - Name: AppSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref 'GitHubRepoBranch'
                OAuthToken: !Ref 'GitHubOAuthToken'
              OutputArtifacts:
                - Name: AppSource
              RunOrder: '1'
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: AppSource
              RunOrder: '1'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: REPOSITORY_URI
          Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ContainerRegistry}
      Name: !Ref ProjectName
      ServiceRole:
        Fn::GetAtt:
        - CodeBuildRole
        - Arn

  ContainerRegistry:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: test-repository

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codebuild:*'
                Effect: Allow
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
